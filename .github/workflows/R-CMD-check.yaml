# Workflow derived from https://github.com/r-lib/actions/tree/v2/examples
# Need help debugging build failures? Start at https://github.com/r-lib/actions#where-to-find-help
on:
  push:
    branches: [main, master]
  pull_request:

name: R-CMD-check.yaml

permissions: read-all

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: macos-latest,   r: 'release'}
          - {os: windows-latest, r: 'release'}
          - {os: ubuntu-latest,   r: 'devel', http-user-agent: 'release'}
          - {os: ubuntu-latest,   r: 'release'}
          - {os: ubuntu-latest,   r: 'oldrel-1'}

    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      R_KEEP_PKG_SOURCE: yes

    steps:
      - uses: actions/checkout@v5
      
      - uses: actions/setup-python@v6
        with:
          python-version: '3.10'

      - uses: r-lib/actions/setup-pandoc@v2

      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.config.r }}
          http-user-agent: ${{ matrix.config.http-user-agent }}
          use-public-rspm: true

      # Install system dependencies for Linux
      - name: Install system dependencies (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libpng-dev \
            libjpeg-dev \
            libtiff-dev \
            libcurl4-openssl-dev \
            libssl-dev \
            libxml2-dev \
            libfontconfig1-dev \
            libharfbuzz-dev \
            libfribidi-dev \
            libfreetype6-dev
      
      # Install system dependencies for macOS
      - name: Install system dependencies (macOS)
        if: runner.os == 'macOS'
        run: |
          brew install libpng jpeg libtiff

      # Install Python packages (matching Dockerfile setup)
      - name: Install Python packages
        shell: bash
        run: |
          if [ "$RUNNER_OS" == "Linux" ]; then
            pip3 install --no-cache-dir numpy opencv-python-headless matplotlib scikit-image
          elif [ "$RUNNER_OS" == "macOS" ]; then
            python3 -m pip install --no-cache-dir numpy opencv-python-headless matplotlib scikit-image
          else
            python -m pip install --no-cache-dir numpy opencv-python-headless matplotlib scikit-image
          fi

      # Configure reticulate to use the correct Python
      - name: Configure Python for reticulate
        shell: Rscript {0}
        run: |
          install.packages('reticulate', repos = 'https://cloud.r-project.org/')
          library(reticulate)
          
          # Get Python path based on OS
          if (Sys.info()["sysname"] == "Windows") {
            python_path <- Sys.which("python")
          } else {
            python_path <- Sys.which("python3")
          }
          
          cat("Python path:", python_path, "\n")
          Sys.setenv(RETICULATE_PYTHON = python_path)
          
          # Configure and verify
          py_config()
          
          # Verify all required modules are available
          modules <- c("numpy", "cv2", "matplotlib", "skimage")
          for (mod in modules) {
            available <- py_module_available(mod)
            cat(sprintf("%s is %s\n", mod, ifelse(available, "available", "NOT available")))
            if (!available) {
              stop(sprintf("Required Python module '%s' is not available", mod))
            }
          }

      # Set Python path for subsequent steps
      - name: Set Python path environment variable
        shell: bash
        run: |
          if [ "$RUNNER_OS" == "Windows" ]; then
            PYTHON_PATH=$(which python)
          else
            PYTHON_PATH=$(which python3)
          fi
          echo "RETICULATE_PYTHON=$PYTHON_PATH" >> $GITHUB_ENV
          echo "Python path set to: $PYTHON_PATH"

      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: any::rcmdcheck
          needs: check

      - uses: r-lib/actions/check-r-package@v2
        with:
          upload-snapshots: true
          build_args: 'c("--no-manual","--compact-vignettes=gs+qpdf")'
